plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "5.1.0.4882"
	id "jacoco" // Add Jacoco plugin
}

group = 'nl.fontys.s3'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'io.github.classgraph:classgraph:4.8.165'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.springframework:spring-messaging'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	implementation 'com.stripe:stripe-java:24.0.0'
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.google.zxing:core:3.5.2'
	implementation 'com.google.zxing:javase:3.5.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sonar {
	properties {
		property "sonar.projectKey", "I470417_football-ticketindv_1a1b85d8-76e8-470a-8f85-1ae52ac38248"
		property "sonar.projectName", "football ticketindv"
		property "sonar.qualitygate.wait", true
		property "sonar.token", "sqp_2602aa95b6c3c5a697edd017f8ec3a56ec53dac1" // user token. added for running Gradle locally
	}
}

jacocoTestReport {
	reports {
		xml.required = true

	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Ensure Jacoco report is generated after tests
}